{"version":3,"sources":["component/Post/post/Post.js","component/Post/Post.js","component/Form/form.js","component/Main/home.js"],"names":["Post","post","setcurrentid","dispatch","loading","useDispatch","state","useSelector","loginreducer","logininfo","res","useState","image","setImage","useEffect","selectedfile","islike","setislike","isconfirm","setisconfirm","Likes","ispostlike","likecount","find","like","id","googleId","length","className","onClick","deletePost","_id","name","moment","createdAt","fromNow","creator","opendomportal","class","aria-hidden","src","alt","tags","map","i","index","title","message","likepost","React","memo","connect","isloading","postlength","posts","currentid","console","log","Loader","notfound","postadd","postsuccess","setvisible","p","Add_done","postsucess","clear","setpost","initstate","username","selectedfilename","setTimeout","error","seterror","removeerror","Formheader","createPortal","document","getElementById","classList","remove","onSubmit","e","preventDefault","updatepost","createpost","placeholder","value","onFocus","onChange","target","newarr","split","type","multiple","onDone","base64"],"mappings":"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","file":"static/js/6.7985c613.chunk.js","sourcesContent":["import React,{useEffect, useState} from 'react'\r\n\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport moment from 'moment';\r\nimport {deletePost,likepost,opendomportal} from '../../../action/post'\r\nfunction Post({post,setcurrentid,loading}) {\r\n    \r\n    const dispatch= useDispatch();\r\n    const state = useSelector(state => state?.loginreducer?.logininfo?.res)\r\n   \r\n    const[image,setImage] =useState(null)\r\n    useEffect(() => {\r\n        \r\n        //You can make a backend request to the api to make the request for the apporiprate image regarding the ID ie post._id\r\n        setImage(post.selectedfile);\r\n    }, [])\r\n    const [islike,setislike]=useState(false);\r\n\r\n    const callfun=()=>{\r\n      setcurrentid(post._id);\r\n      dispatch(opendomportal);\r\n\r\n    }\r\n    const [isconfirm,setisconfirm]=useState(false)\r\n    const Likes=({setislike})=>{\r\n        \r\n        useEffect(()=>{\r\n            const ispostlike= post.likecount.find((like)=>like===((state?.id)||(state?.googleId)))\r\n               if(ispostlike)setislike(true);\r\n               else\r\n                setislike(false);\r\n        },[])\r\n\r\n        if(post.likecount.length>0)\r\n        {\r\n            const ispostlike= post.likecount.find((like)=>like===((state?.id)||(state?.googleId)))\r\n                \r\n                if(ispostlike)\r\n                {\r\n                    \r\n                    return <>{post.likecount.length>2 ?`You and ${post.likecount.length-1} others` :  `${post.likecount.length}  like`} </>\r\n                        \r\n                }\r\n               else\r\n                 \r\n                 return  <>{post.likecount.length>1 ?` ${post.likecount.length} likes `:`${post.likecount.length}  like`}</>\r\n        }\r\n        else{\r\n            \r\n        return <>Like</>\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        {isconfirm\r\n          &&\r\n          <div className='overlay'>\r\n          <div className='Conformation-container'>\r\n            <div className='Congif-Container'><h4>Are You Sure ? </h4></div>\r\n            <div className='Config-Buttons'><button onClick={()=>setisconfirm(false)}>Cancel</button><button onClick={()=>dispatch(deletePost(post._id))}>Sure</button></div>\r\n          </div>\r\n          </div>\r\n        }\r\n          \r\n            <div className='upperhalf'>\r\n              \r\n              <div className='absolute'>\r\n                  <div className='Info'>\r\n                      <h4>{post.name?post.name:\"NONE\"}</h4>\r\n                      \r\n                      <h6>{moment(post.createdAt).fromNow()}</h6>\r\n                  </div>\r\n                  <div className='edit'>\r\n                  {(state?.id || state?.googleId)===post?.creator?\r\n                      <button \r\n\r\n                      onClick={()=>{callfun()}}\r\n                      \r\n                      ><i class=\"fa fa-cog\" aria-hidden=\"true\"></i></button>:<></>}\r\n                      \r\n                      \r\n                 </div>\r\n                 \r\n              </div>\r\n             <div className='imageclass'> <img src={image} alt='image'></img></div> \r\n            </div>\r\n            <div className='lowerhalf'>\r\n                <div className='tags'>\r\n                    {\r\n                        post.tags?.length!=0?post.tags?.map((i,index)=>{\r\n                            return <h6 key={index}>#{i}</h6>\r\n                        }):<h6> # no tag</h6>\r\n                       \r\n                    }\r\n                </div>\r\n                <div className='VisitTitle'><h5>{post.title} </h5></div>\r\n                <div className='Message'>\r\n                    <p>{post.message}</p>\r\n                </div>\r\n                <div className='likes'>\r\n                        <div className='like'><span onClick={()=>dispatch(likepost(post._id))}><i class={islike?'fa fa-heart':'fa fa-heart-o'} aria-hidden=\"true\"></i></span><h6  className='animate_like'><Likes setislike={setislike} /></h6></div>\r\n                         {(state?.id || state?.googleId)===post?.creator?<div className='delete'><h6 onClick={()=>setisconfirm(true)}>Delete</h6></div>:<></>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Post)","import React from 'react'\r\nimport Post from './post/Post'\r\nimport {useSelector} from 'react-redux';\r\nimport {connect}from 'react-redux'\r\nimport Loader from './Loader'\r\nfunction Posts({currentid,setcurrentid,isloading,postlength}) {\r\n    \r\n    const posts=useSelector((state)=>{  return state.posts})\r\n      console.log(isloading)\r\n       return (\r\n              <>\r\n              \r\n              <div className='SmallContainers'>\r\n                  {posts?.map((post)=>(\r\n                      <div className='smallinside' key={post._id}>\r\n                          <Post post={post} setcurrentid={setcurrentid} loading={true}/>\r\n                      </div >\r\n                  ))}\r\n                  {isloading && <Loader />}\r\n                {/* <div className='smallinside Error-Controls danger'><h5>No More Post Found!</h5></div> */}\r\n                {!isloading && postlength===0 &&<Loader notfound={true}/>}\r\n                </div>\r\n              </>\r\n    )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n     isloading:state.isloading,\r\n     postlength:state.posts.length\r\n    }\r\n}\r\nexport default connect(mapStateToProps) (Posts)\r\n","\r\nimport React,{useState,useEffect} from 'react'\r\nimport { createPortal } from 'react-dom';\r\nimport FileBase from 'react-file-base64';\r\nimport{ useDispatch,useSelector }from 'react-redux'\r\nimport {createpost,updatepost} from '../../action/post'\r\nimport {connect} from 'react-redux'\r\n\r\nfunction Form({ currentid,setcurrentid}) {\r\n    // console.log(`post via connect ${postadd}`);\r\n    const [isvisible,setvisible]=useState(true);\r\n    \r\n    const dispatch=useDispatch();\r\n    const posts=useSelector((state)=>currentid?state.posts.find((p)=>p._id===currentid):null);\r\n    const Add_done=useSelector((state)=>state.postsucess);\r\n    console.log(Add_done);\r\n    const clear=()=>{\r\n        setcurrentid(null)\r\n        setpost(initstate)}\r\n    const username=useSelector((state)=>state.loginreducer?.logininfo?.res?.name)\r\n    \r\n\r\n    const initstate={\r\n        title:\"\",\r\n        message:'',\r\n        tags:'',\r\n        selectedfile:'',\r\n        selectedfilename:''\r\n    };\r\n    if(Add_done===true)\r\n    {\r\n        setTimeout(()=>{\r\n            setvisible(false)\r\n        },10000)\r\n    }\r\n    const [post, setpost] = useState(initstate);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(posts)setpost(posts)\r\n    },[posts])\r\n    \r\n    \r\n    const [error, seterror] = useState(false)\r\n    const handlesubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(currentid)\r\n        {\r\n            \r\n           \r\n            if(!post.title  ||!post.message || !post.tags ||!post.selectedfile)\r\n            {\r\n                seterror(true);\r\n            }\r\n            else\r\n            {\r\n                dispatch(updatepost(currentid,{...post,name:username}));\r\n                clear();\r\n            }\r\n            \r\n        }\r\n        else{\r\n\r\n            if(!post.title ||!post.message || !post.tags ||!post.selectedfile)\r\n            {\r\n                seterror(true);\r\n            }\r\n            else\r\n            {\r\n                dispatch(createpost({...post,name:username}));\r\n                clear();\r\n            }\r\n        }\r\n    }\r\n    const removeerror=()=>{\r\n        seterror(false)\r\n    }\r\n    const handlemessage=(e)=>\r\n    {\r\n        setpost({...post,message:e.target.value});\r\n    }\r\n    const handletags=(e)=>\r\n    {\r\n        \r\n       let newarr=e.target.value.split(',');\r\n        setpost({...post,tags:newarr});\r\n    }\r\n    const handletitle=(e)=>\r\n    {\r\n        setpost({...post,title:e.target.value});\r\n    }\r\n    const rootportalclose=()=>{\r\n        let p=document.getElementById('rootportal');\r\n        let p1=p.classList;\r\n        p1.remove('my-class');\r\n    }\r\n    \r\n    \r\n    const Formheader=()=>{\r\n        return(\r\n            <div>\r\n                <h4>{currentid?'Edit':'Create'} a Post</h4>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        createPortal(\r\n        <>\r\n        <h4 onClick={()=>{rootportalclose()}}>Click This Area to Dismiss</h4>\r\n        <div className='editable'>\r\n            <div className='form'>\r\n                <Formheader />\r\n                <form onSubmit={handlesubmit}>\r\n                    \r\n                    <div className='form-div'>\r\n                        <label className='form-label'>Title</label>\r\n                        <input className='form-input' placeholder='Title' value={post.title} onFocus={removeerror} onChange={(handletitle)}></input>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className='form-div'>\r\n                        <label className='form-label'>Message</label>\r\n                        <textarea className='form-input 'placeholder='eg:something you like' value={post.message} onFocus={removeerror}  onChange={handlemessage}></textarea>\r\n                        \r\n                    </div>\r\n                    <div className='form-div'>\r\n                        <label className='form-label'>Tags</label>\r\n                        <input className='form-input'placeholder='eg:games,party' value={post.tags} onFocus={removeerror}   onChange={handletags}></input>\r\n                        \r\n                    </div>\r\n                    <div className='form-div'>\r\n                        \r\n                        <FileBase type='file' onFocus={removeerror}   multiple={false} onDone={({base64})=>setpost({...post,selectedfile:base64})}/>\r\n                        {/* <FileBase type='file'   multiple={false} onDone={(k)=>setpost({...post,selectedfilename:k.name,selectedfile:k.base64})}/> */}\r\n                    </div>\r\n                    <div className='form-div'>\r\n                          <input type='submit' className='form_button' value='Submit'></input>\r\n                          <input type='button' className='form_button clear' value='Clear' onClick={clear}></input>\r\n                    </div>\r\n\r\n                       {error && <div className='form-div' id='error'> Please Fill all the Fields</div> } \r\n                   \r\n               </form>\r\n            </div>\r\n        </div>\r\n        </>\r\n    ,\r\n\r\n    document.getElementById('rootportal')) )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        postadd:state.postsuccess\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Form)\r\n","import React,{useEffect} from 'react'\r\nimport Posts from './../Post/Post'\r\nimport Form from './../Form/form'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nfunction Home({setcurrentid,currentid,state}) {\r\n    \r\n  \r\n    return (\r\n        <>\r\n        \r\n             <Posts setcurrentid={setcurrentid} ></Posts>\r\n\r\n             <Form currentid={currentid} setcurrentid={setcurrentid}/>\r\n        \r\n       </>\r\n    \r\n     )\r\n    }\r\n\r\nconst mapStateToProps=state=>{\r\n    \r\n    return {\r\n        state:state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)\r\n"],"sourceRoot":""}